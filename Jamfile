import testing ;
import os ;
import common ;
import toolset ;
import feature ;
import builtin ;
import property-set ;
import option ;

rule suppress-warnings ( properties * )
{
    local vc-ver = [
        MATCH "^<toolset-msvc:version>([0-9]+)[.]" : $(properties)
    ] ;
    if $(vc-ver) && $(vc-ver) >= 8
    {
        return <cxxflags>-wd4819 <cxxflags>-wd4996 ;
    }
}

rule check-wstring ( properties * )
{
    local gcc-ver = [
        MATCH "^<toolset-gcc:version>([0-9]+)[.]" : $(properties)
    ] ;
    local targ = [ feature.get-values target-os : $(properties) ] ;
    if $(targ) = cygwin && $(gcc-ver) && $(gcc-ver) < 4
    {
        return <define>NO_WSTRING=1 <define>OLD_CYGWIN=1 ;
    }
}

rule select-platform-obj ( properties * )
{
    switch [ feature.get-values target-os : $(properties) ]
    {
        case cygwin : { return <source>compat/cygwin.cc <source>compat/unix-path.cc <source>compat/encode-iconv.cc ; }
        case windows : { return <source>compat/mingw.cc ; }
        case linux : { return <source>compat/linux.cc <source>compat/unix-path.cc <source>compat/encode-iconv.cc ; }
        case solaris : { return <source>compat/solaris.cc <source>compat/unix-path.cc <source>compat/encode-iconv.cc ; }
    }
}

rule select-path-sep ( properties * )
{
    switch [ feature.get-values target-os : $(properties) ]
    {
        case windows : { return <define>PATH_SEP_BACKSLASH=1 ; }
    }
}

project mgit
    : requirements
      <toolset>msvc:<target-os>windows
      <toolset>gcc:<cxxflags>-Wno-long-long
      <toolset>gcc,<toolset-gcc:flavor>mingw:<target-os>windows
      <toolset>gcc,<toolset-gcc:flavor>cygwin:<target-os>cygwin
      <target-os>windows,<toolset>gcc,<address-model>64:<link>static
      <target-os>windows,<toolset>gcc,<address-model>64:<runtime-link>static
      <link>shared:<define>BOOST_TEST_DYN_LINK=1
      <target-os>cygwin:<linkflags>-liconv
      <target-os>solaris:<linkflags>-liconv
      <library>/boost//headers
      <conditional>@suppress-warnings
      <conditional>@check-wstring
      <conditional>@select-path-sep
      <define>BOOST_ALL_NO_LIB=1
      <include>.
    : usage-requirements
      <define>BOOST_TEST_NO_AUTO_LINK=1
    : build-dir bin
    : default-build
      <address-model>32
    ;


lib gitobjs
    :
    [ path.glob . : *.cc : modern-git.cc ]
    :
    <conditional>@select-platform-obj
    <library>/boost/system//boost_system
    :
    ;

exe git
    :
    modern-git.cc
    gitobjs
    :
    <library>/boost/program_options//boost_program_options
    ;


local test_sources = [ GLOB testsuite : *.cc ] ;
local test_names = $(test_sources:B) ;
for name in $(test_names)
{
    run testsuite/$(name).cc
        gitobjs
        :
        :
        :
        <library>/boost/system//boost_system
        <library>/boost/test//boost_unit_test_framework
        :
        $(name)
        ;
    explicit $(name) ;
}

alias test : $(test_names) ;


local prefix = [ option.get prefix ] ;
if [ os.name ] = NT
{
    prefix ?= C:\\mgit ;
}
else
{
    prefix ?= /usr/local/mgit ;
}

rule select-bin-type ( properties * )
{
    switch [ feature.get-values target-os : $(properties) ]
    {
        case cygwin     : return <install-type>EXE <install-type>SHARED_LIB ;
        case windows    : return <install-type>EXE <install-type>SHARED_LIB ;
        case *          : return <install-type>EXE ;
    }
}

rule select-lib-type ( properties * )
{
    switch [ feature.get-values target-os : $(properties) ]
    {
        case cygwin     : return <install-type>STATIC_LIB ;
        case windows    : return <install-type>STATIC_LIB ;
        case *          : return <install-type>LIB ;
    }
}

explicit install ;
install install-bin
    :
    git
    :
    <location>$(prefix)/bin
    <dll-path>$(prefix)/lib
    <install-dependencies>on
    <conditional>@select-bin-type
    ;

install install-lib
    :
    git
    :
    <location>$(prefix)/lib
    <install-dependencies>on
    <conditional>@select-lib-type
    ;

install install-inc
    :
    [ GLOB . : *.hpp ]
    :
    <location>$(prefix)/include
    ;

alias install : install-bin install-lib install-inc ;
explicit install-bin install-lib install-inc install ;
